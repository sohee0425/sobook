<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.so.book.review.ReviewMapper">

	<select id="rev_list" resultMap="ReviewResultMap">
		select 
			rt.rev_code, rt.mem_id, rt.pro_code, rt.rev_title, rt.rev_content, rt.rev_score, rt.rev_date, rt.rev_update,
			rrt.rev_code, rrt.manager_id, rrt.reply_id,rrt.reply_title, rrt.reply_content, rrt.reply_date, rrt.reply_update
		from 
			review_tbl rt 
		left outer join 
			review_replies_tbl rrt 
		on 
			rt.rev_code = rrt.rev_code
		where 
			pro_code = #{pro_code}
        order by 
			rt.rev_date desc, rrt.reply_date asc
		limit 
			#{cri.pageStart}, #{cri.perPageNum}
	</select>
	
	<resultMap type="com.so.book.review.ReviewVo" id="ReviewResultMap">
		<id property="rev_code" column="rev_code"/> <!-- PK -->
		<result property="mem_id" column="mem_id"/>
		<result property="pro_code" column="pro_code"/>
		<result property="rev_title" column="rev_title"/>
		<result property="rev_content" column="rev_content"/>
		<result property="rev_score" column="rev_score"/>
		<result property="rev_date" column="rev_date"/>
		<result property="rev_update" column="rev_update"/>
		
		<collection property="replies" ofType="com.so.book.review.ReviewReply">
			<id property="reply_id" column="reply_id"/>
			<!-- FK 중복작업은 하면 안됨 -->
			<result property="manager_id" column="manager_id"/>
			<result property="reply_title" column="reply_title"/>
			<result property="reply_content" column="reply_content"/>
			<result property="reply_date" column="reply_date"/>
			<result property="reply_update" column="reply_update"/>
		</collection>
	</resultMap>
	
	<select id="getCountReviewByPro_code" resultType="int" parameterType="Integer">
		select
			count(*)
		from
			review_tbl
		where
			pro_code = #{pro_code}
	</select>
	
	<insert id="review_save" parameterType="com.so.book.review.ReviewVo">
		insert into
			review_tbl(mem_id, pro_code, rev_title, rev_content, rev_score)
		values
			(#{mem_id}, #{pro_code}, #{rev_title}, #{rev_content}, #{rev_score})
	</insert>
	
	<select id="review_info" resultType="com.so.book.review.ReviewVo" parameterType="Integer">
		select
			rev_code, mem_id, pro_code, rev_title,  rev_content, rev_score, rev_date
		from 
			review_tbl
		where 
			rev_code = #{rev_code}
	</select>
	
	<update id="review_modify" parameterType="com.so.book.review.ReviewVo">
		update 
			review_tbl
		set 
			rev_title = #{rev_title}, rev_content = #{rev_content}, rev_score = #{rev_score}, rev_date = now()
		where
			rev_code = #{rev_code} 
			
	</update>
	
	<delete id="review_delete" parameterType="Integer">
		delete from
			review_tbl
		where
			rev_code = #{rev_code}
	</delete>
	
	<!--<delete id="review_delete" parameterType="Long">
     리뷰 삭제 
    delete from review_tbl
    where rev_code = #{rev_code};
    
     상품 테이블에서 해당 상품의 리뷰 수를 갱신 (예: 리뷰 수 감소) 
    update product_tbl
    set review_count = review_count - 1
    where product_code = (select product_ from review_tbl where rev_code = #{rev_code});
</delete>-->
	
	
	<insert id="reply_insert">
		insert into
			review_replies_tbl(rev_code, manager_id, reply_title, reply_content)
		values(#{rev_code}, #{manager_id}, #{reply_title}, #{reply_content})
	</insert>
	
	
</mapper>